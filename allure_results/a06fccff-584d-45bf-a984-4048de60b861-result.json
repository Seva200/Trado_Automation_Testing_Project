{"name": "test_sign_up_with_invalid_code", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\t(No symbol) [0x00EFDCE3]\n\t(No symbol) [0x00E939D1]\n\t(No symbol) [0x00DA4DA8]\n\t(No symbol) [0x00DD019F]\n\t(No symbol) [0x00DD03AB]\n\t(No symbol) [0x00DFEE62]\n\t(No symbol) [0x00DEAF14]\n\t(No symbol) [0x00DFD57C]\n\t(No symbol) [0x00DEACC6]\n\t(No symbol) [0x00DC6F68]\n\t(No symbol) [0x00DC80CD]\n\tGetHandleVerifier [0x01173832+2506274]\n\tGetHandleVerifier [0x011A9794+2727300]\n\tGetHandleVerifier [0x011AE36C+2746716]\n\tGetHandleVerifier [0x00FA6690+617600]\n\t(No symbol) [0x00E9C712]\n\t(No symbol) [0x00EA1FF8]\n\t(No symbol) [0x00EA20DB]\n\t(No symbol) [0x00EAC63B]\n\tBaseThreadInitThunk [0x76327D69+25]\n\tRtlInitializeExceptionChain [0x76FFB74B+107]\n\tRtlClearBits [0x76FFB6CF+191]", "trace": "self = <tests.chromeTests.testSignUpModal.TestSignUpModal object at 0x000001EE6A9E3280>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bcb623717a7299eb718f0a8412e34d26\")>\n\n    @allure.description(\"the test is verify, that user can't sign up with invalid sms code\")\n    def test_sign_up_with_invalid_code(self, driver):\n        self.welcome_to_modal.choose_coktails()\n        assert self.common_actions.get_attribute_by_textcontent(home_lcs[\"person_area_link\"]) == \" התחברות \"\n        self.home_page.sign_in_click()\n        self.sign_up_modal.sign_up_btn_click()\n        self.sign_up_modal.set_phone_number(phone_num)\n        self.sign_up_modal.set_bn_number(f'4030{random.randint(0, 99999)}')\n        self.sign_up_modal.accept_policy()\n        self.sign_up_modal.log_in_btn_click()\n        sleep(5)\n>       self.sign_up_modal.set_code(1, 2, 3, 4, 5)\n\ntests\\chromeTests\\testSignUpModal.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc\\pages\\signUpModal.py:45: in set_code\n    SignUpModal.set_1_num(self, num1)\nsrc\\pages\\signUpModal.py:35: in set_1_num\n    CommonActions.set_locator(self, sign_up_lcs[\"1input_number_fld\"]).send_keys(num)\nsrc\\utils\\commonActions.py:9: in set_locator\n    return wdw(self.driver, 5).until(ec.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bcb623717a7299eb718f0a8412e34d26\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001EE6AE76050>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x00EFDCE3]\nE       \t(No symbol) [0x00E939D1]\nE       \t(No symbol) [0x00DA4DA8]\nE       \t(No symbol) [0x00DD019F]\nE       \t(No symbol) [0x00DD03AB]\nE       \t(No symbol) [0x00DFEE62]\nE       \t(No symbol) [0x00DEAF14]\nE       \t(No symbol) [0x00DFD57C]\nE       \t(No symbol) [0x00DEACC6]\nE       \t(No symbol) [0x00DC6F68]\nE       \t(No symbol) [0x00DC80CD]\nE       \tGetHandleVerifier [0x01173832+2506274]\nE       \tGetHandleVerifier [0x011A9794+2727300]\nE       \tGetHandleVerifier [0x011AE36C+2746716]\nE       \tGetHandleVerifier [0x00FA6690+617600]\nE       \t(No symbol) [0x00E9C712]\nE       \t(No symbol) [0x00EA1FF8]\nE       \t(No symbol) [0x00EA20DB]\nE       \t(No symbol) [0x00EAC63B]\nE       \tBaseThreadInitThunk [0x76327D69+25]\nE       \tRtlInitializeExceptionChain [0x76FFB74B+107]\nE       \tRtlClearBits [0x76FFB6CF+191]\n\nC:\\Users\\artem\\PycharmProjects\\POMTrado\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "description": "the test is verify, that user can't sign up with invalid sms code", "start": 1680535706748, "stop": 1680535719130, "uuid": "52227edd-4e3d-4b4f-8b79-5c87381ed3e4", "historyId": "9a92de176f793a216b4dd16ff10508c2", "testCaseId": "85376db3a7ee85dfc9d7722a1987f886", "fullName": "tests.chromeTests.testSignUpModal.TestSignUpModal#test_sign_up_with_invalid_code", "labels": [{"name": "parentSuite", "value": "tests.chromeTests"}, {"name": "suite", "value": "testSignUpModal"}, {"name": "subSuite", "value": "TestSignUpModal"}, {"name": "host", "value": "krot"}, {"name": "thread", "value": "19772-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.chromeTests.testSignUpModal"}]}