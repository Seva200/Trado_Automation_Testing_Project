{"name": "test_max_card_link", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"/\">...</a> is not clickable at point (1164, 691). Other element would receive the click: <div class=\"img_img product_image product_noImage img_fallback\">...</div>\n  (Session info: MicrosoftEdge=111.0.1661.62)\nStacktrace:\nBacktrace:\n\tMicrosoft::Applications::Events::EventProperties::SetProperty [0x00007FF7049DA742+12658]\n\tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF7049729E2+747650]\n\t(No symbol) [0x00007FF70460DD2E]\n\t(No symbol) [0x00007FF7046585D4]\n\t(No symbol) [0x00007FF7046558D9]\n\t(No symbol) [0x00007FF704652CE8]\n\t(No symbol) [0x00007FF704651719]\n\t(No symbol) [0x00007FF7046430B6]\n\t(No symbol) [0x00007FF70466F3EA]\n\t(No symbol) [0x00007FF704642791]\n\t(No symbol) [0x00007FF704642661]\n\t(No symbol) [0x00007FF70466F720]\n\t(No symbol) [0x00007FF704642791]\n\t(No symbol) [0x00007FF70468874C]\n\t(No symbol) [0x00007FF70466F1C3]\n\t(No symbol) [0x00007FF7046417D6]\n\t(No symbol) [0x00007FF7046409B5]\n\t(No symbol) [0x00007FF704641F44]\n\tMicrosoft::Applications::Events::EventProperties::SetProperty [0x00007FF7048856A0+147088]\n\t(No symbol) [0x00007FF704729306]\n\tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF7048C4607+33959]\n\tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF7048C80D5+49013]\n\tMicrosoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00007FF704BB9A93+1305267]\n\tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF70497AF9C+781884]\n\tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF7049804C4+803684]\n\tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF70498061C+804028]\n\tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF704988721+837057]\n\tBaseThreadInitThunk [0x00007FF9B63A26BD+29]\n\tRtlUserThreadStart [0x00007FF9B704A9F8+40]", "trace": "self = <tests.edgeTests.testHomePage.TestHomePage object at 0x000001EE6AB9C9D0>\ndriver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"6cc1aac6704cb0278fe37911412f8b78\")>\n\n    @allure.description(\"the test is verify, if max card link is work\")\n    @allure.severity(severity_level='minor')\n    def test_max_card_link(self, driver):\n        self.welcome_to_modal.choose_coktails()\n>       self.home_page.max_card_link_click()\n\ntests\\edgeTests\\testHomePage.py:235: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc\\pages\\homePage.py:78: in max_card_link_click\n    CommonActions.click_on_locator(self, home_lcs[\"max_card_link\"])\nsrc\\utils\\commonActions.py:14: in click_on_locator\n    return wdw(self.driver, 5).until(ec.visibility_of_element_located(locator)).click()\nC:\\Users\\artem\\PycharmProjects\\POMTrado\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\nC:\\Users\\artem\\PycharmProjects\\POMTrado\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:403: in _execute\n    return self._parent.execute(command, params)\nC:\\Users\\artem\\PycharmProjects\\POMTrado\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001EE6AEE1FC0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...988721+837057]\\\\n\\\\tBaseThreadInitThunk [0x00007FF9B63A26BD+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF9B704A9F8+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"/\">...</a> is not clickable at point (1164, 691). Other element would receive the click: <div class=\"img_img product_image product_noImage img_fallback\">...</div>\nE         (Session info: MicrosoftEdge=111.0.1661.62)\nE       Stacktrace:\nE       Backtrace:\nE       \tMicrosoft::Applications::Events::EventProperties::SetProperty [0x00007FF7049DA742+12658]\nE       \tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF7049729E2+747650]\nE       \t(No symbol) [0x00007FF70460DD2E]\nE       \t(No symbol) [0x00007FF7046585D4]\nE       \t(No symbol) [0x00007FF7046558D9]\nE       \t(No symbol) [0x00007FF704652CE8]\nE       \t(No symbol) [0x00007FF704651719]\nE       \t(No symbol) [0x00007FF7046430B6]\nE       \t(No symbol) [0x00007FF70466F3EA]\nE       \t(No symbol) [0x00007FF704642791]\nE       \t(No symbol) [0x00007FF704642661]\nE       \t(No symbol) [0x00007FF70466F720]\nE       \t(No symbol) [0x00007FF704642791]\nE       \t(No symbol) [0x00007FF70468874C]\nE       \t(No symbol) [0x00007FF70466F1C3]\nE       \t(No symbol) [0x00007FF7046417D6]\nE       \t(No symbol) [0x00007FF7046409B5]\nE       \t(No symbol) [0x00007FF704641F44]\nE       \tMicrosoft::Applications::Events::EventProperties::SetProperty [0x00007FF7048856A0+147088]\nE       \t(No symbol) [0x00007FF704729306]\nE       \tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF7048C4607+33959]\nE       \tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF7048C80D5+49013]\nE       \tMicrosoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00007FF704BB9A93+1305267]\nE       \tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF70497AF9C+781884]\nE       \tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF7049804C4+803684]\nE       \tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF70498061C+804028]\nE       \tMicrosoft::Applications::Events::EventProperty::EventProperty [0x00007FF704988721+837057]\nE       \tBaseThreadInitThunk [0x00007FF9B63A26BD+29]\nE       \tRtlUserThreadStart [0x00007FF9B704A9F8+40]\n\nC:\\Users\\artem\\PycharmProjects\\POMTrado\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: ElementClickInterceptedException"}, "description": "the test is verify, if max card link is work", "start": 1680536243156, "stop": 1680536244645, "uuid": "8f18722c-b873-4cbd-b524-6cfd41353ff7", "historyId": "89eec9a53da89c183124be5ae7d33503", "testCaseId": "1bb0684e6a6c001cc5a40be1dd6851cb", "fullName": "tests.edgeTests.testHomePage.TestHomePage#test_max_card_link", "labels": [{"name": "severity", "value": "minor"}, {"name": "parentSuite", "value": "tests.edgeTests"}, {"name": "suite", "value": "testHomePage"}, {"name": "subSuite", "value": "TestHomePage"}, {"name": "host", "value": "krot"}, {"name": "thread", "value": "19772-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.edgeTests.testHomePage"}]}