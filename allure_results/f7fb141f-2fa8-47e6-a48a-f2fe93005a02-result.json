{"name": "test_invalid_business_num2", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.chromeTests.testPersonalAreaPage.TestPersonalAreaPage object at 0x00000179E70339A0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f8889c10c42c14cbf9fd3e786a054c4b\")>\n\n    @allure.description(\"the test is verify, that user can't edit his profile with invalid business number\")\n    def test_invalid_business_num2(self, driver):\n        self.sign_in_modal.sign_in()\n        self.home_page.personal_area_hdr_click()\n        self.personal_area_page.edit_personal_area('Josh', 'Gray', '0552603210', 'joshgrey89@mail.com', '12345678999',\n                                                   'Paris Baget', '29')\n>       assert self.common_actions.get_attribute_by_textcontent(personal_area_lcs[\"inv_bn_msg\"]) == \"ח.פ לא תקין\"\n\ntests\\chromeTests\\testPersonalAreaPage.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc\\utils\\commonActions.py:40: in get_attribute_by_textcontent\n    attribute = wdw(self.driver, 5).until(ec.visibility_of_element_located(locator)).get_attribute(\"textContent\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f8889c10c42c14cbf9fd3e786a054c4b\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x00000179E6DCEF80>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\artem\\PycharmProjects\\POMTrado\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "description": "the test is verify, that user can't edit his profile with invalid business number", "start": 1680369444949, "stop": 1680369453958, "uuid": "153202fc-7a94-481a-a680-29bca5033981", "historyId": "7781497c6b35127d122a4b824045e2db", "testCaseId": "ec1aba2410cacee82f4c5238e093c8a0", "fullName": "tests.chromeTests.testPersonalAreaPage.TestPersonalAreaPage#test_invalid_business_num2", "labels": [{"name": "parentSuite", "value": "tests.chromeTests"}, {"name": "suite", "value": "testPersonalAreaPage"}, {"name": "subSuite", "value": "TestPersonalAreaPage"}, {"name": "host", "value": "krot"}, {"name": "thread", "value": "8896-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.chromeTests.testPersonalAreaPage"}]}