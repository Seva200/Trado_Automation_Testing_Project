{"name": "test2_personal_area_btn", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\t(No symbol) [0x0080DCE3]\n\t(No symbol) [0x007A39D1]\n\t(No symbol) [0x006B4DA8]\n\t(No symbol) [0x006E019F]\n\t(No symbol) [0x006E03AB]\n\t(No symbol) [0x0070EE62]\n\t(No symbol) [0x006FAF14]\n\t(No symbol) [0x0070D57C]\n\t(No symbol) [0x006FACC6]\n\t(No symbol) [0x006D6F68]\n\t(No symbol) [0x006D80CD]\n\tGetHandleVerifier [0x00A83832+2506274]\n\tGetHandleVerifier [0x00AB9794+2727300]\n\tGetHandleVerifier [0x00ABE36C+2746716]\n\tGetHandleVerifier [0x008B6690+617600]\n\t(No symbol) [0x007AC712]\n\t(No symbol) [0x007B1FF8]\n\t(No symbol) [0x007B20DB]\n\t(No symbol) [0x007BC63B]\n\tBaseThreadInitThunk [0x76327D69+25]\n\tRtlInitializeExceptionChain [0x76FFB74B+107]\n\tRtlClearBits [0x76FFB6CF+191]", "trace": "self = <tests.chromeTests.testHomePage.TestHomePage object at 0x000001538DBE3F10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"01dc26b7f9f93de8470cff3865560f59\")>\n\n    @allure.description(\"the test is verify, that user can open the personal area page,\"\n                        \" after he click on the logo button \")\n    def test2_personal_area_btn(self, driver):\n        self.sign_in_modal.sign_in()\n        self.home_page.personal_area_hdr_click()\n        assert driver.current_url == \"https://qa.trado.co.il/user/personalArea\"\n        assert self.common_actions.get_attribute_by_class(\n            personal_area_lcs[\"user_product_list\"]) == \"userProducts_userProductsList \"\n        self.home_page.logo_btn_click()\n        assert driver.current_url == \"https://qa.trado.co.il/\"\n        self.home_page.personal_area_hdr_click()\n        sleep(2)\n>       assert self.common_actions.get_attribute_by_class(\n            personal_area_lcs[\"user_product_list\"]) == \"userProducts_userProductsList \"\n\ntests\\chromeTests\\testHomePage.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc\\utils\\commonActions.py:34: in get_attribute_by_class\n    attribute = wdw(self.driver, 5).until(ec.visibility_of_element_located(locator)).get_attribute(\"class\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"01dc26b7f9f93de8470cff3865560f59\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001538E02E3B0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x0080DCE3]\nE       \t(No symbol) [0x007A39D1]\nE       \t(No symbol) [0x006B4DA8]\nE       \t(No symbol) [0x006E019F]\nE       \t(No symbol) [0x006E03AB]\nE       \t(No symbol) [0x0070EE62]\nE       \t(No symbol) [0x006FAF14]\nE       \t(No symbol) [0x0070D57C]\nE       \t(No symbol) [0x006FACC6]\nE       \t(No symbol) [0x006D6F68]\nE       \t(No symbol) [0x006D80CD]\nE       \tGetHandleVerifier [0x00A83832+2506274]\nE       \tGetHandleVerifier [0x00AB9794+2727300]\nE       \tGetHandleVerifier [0x00ABE36C+2746716]\nE       \tGetHandleVerifier [0x008B6690+617600]\nE       \t(No symbol) [0x007AC712]\nE       \t(No symbol) [0x007B1FF8]\nE       \t(No symbol) [0x007B20DB]\nE       \t(No symbol) [0x007BC63B]\nE       \tBaseThreadInitThunk [0x76327D69+25]\nE       \tRtlInitializeExceptionChain [0x76FFB74B+107]\nE       \tRtlClearBits [0x76FFB6CF+191]\n\nC:\\Users\\artem\\PycharmProjects\\POMTrado\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "description": "the test is verify, that user can open the personal area page, after he click on the logo button ", "start": 1680348323317, "stop": 1680348333783, "uuid": "e3b12bd2-2ecf-408c-bff4-ebd4fe4960dd", "historyId": "4637254c31550b0668f647253bc46cfb", "testCaseId": "0cac2338743a47139ea44e598a62e73f", "fullName": "tests.chromeTests.testHomePage.TestHomePage#test2_personal_area_btn", "labels": [{"name": "parentSuite", "value": "tests.chromeTests"}, {"name": "suite", "value": "testHomePage"}, {"name": "subSuite", "value": "TestHomePage"}, {"name": "host", "value": "krot"}, {"name": "thread", "value": "12616-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.chromeTests.testHomePage"}]}